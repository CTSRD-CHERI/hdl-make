#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Copyright (c) 2013 - 2015 CERN
# Author: Pawel Szostek (pawel.szostek@cern.ch)
# Multi-tool support by Javier D. Garcia-Lasheras (javier@garcialasheras.com)
#
# This file is part of Hdlmake.
#
# Hdlmake is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Hdlmake is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Hdlmake.  If not, see <http://www.gnu.org/licenses/>.
#

import string

from hdlmake.action import ActionMakefile


class ToolActiveHDL(ActionMakefile):

    def __init__(self):
        super(ToolActiveHDL, self).__init__()

    def detect_version(self, path):
        pass

    def get_keys(self):
        tool_info = {
            'name': 'Aldec Active-HDL',
            'id': 'aldec',
            'windows_bin': 'vsimsa',
            'linux_bin': None
        }
        return tool_info

    def get_standard_libraries(self):
        ALDEC_STANDARD_LIBS = ['ieee', 'std']
        return ALDEC_STANDARD_LIBS

    def supported_files(self, fileset):
        from hdlmake.srcfile import SourceFileSet
        sup_files = SourceFileSet()
        # Return an empty fileset
        return sup_files


    def _print_clean(self, top_module):
        self.writeln("""\
#target for cleaning all intermediate stuff
clean:
\t\trm -rf run.command library.cfg work

#target for cleaning final files
mrproper: clean
\t\trm -f *.vcd *.asdb
""")


    def _print_sim_compilation(self, fileset, top_module):
        # TODO: ??
        from hdlmake.srcfile import VHDLFile, VerilogFile, SVFile

        self.writeln("simulation:")

        self.writeln(
            "\t\techo \"# Active-HDL command file, generated by HDLMake\" > run.command")
        self.writeln()

        self.writeln(
            "\t\techo \"# Create library and set as default target\" >> run.command")
        self.writeln("\t\techo \"alib work\" >> run.command")
        self.writeln("\t\techo \"set worklib work\" >> run.command")
        self.writeln()

        self.writeln(
            "\t\techo \"# Compiling HDL source files\" >> run.command")
        for vl in fileset.filter(VerilogFile):
            self.writeln(
                "\t\techo \"alog " +
                vl.rel_path(
                ) +
                "\" >> run.command")
        for sv in fileset.filter(SVFile):
            self.writeln(
                "\t\techo \"alog " +
                sv.rel_path(
                ) +
                "\" >> run.command")
        for vhdl in fileset.filter(VHDLFile):
            self.writeln(
                "\t\techo \"acom " +
                vhdl.rel_path(
                ) +
                "\" >> run.command")
        self.writeln()

        self.writeln("\t\tvsimsa -do run.command")

